{"title":"找不到dev-server，请允许我给mock数据找一个接口","date":"2018-01-19T12:37:03.000Z","date_formatted":{"ll":"Jan 19, 2018","L":"01/19/2018","MM-DD":"01-19"},"link":"2018/01/19/vueCl-exExpressDataMock-I-do-t-have-devServer","tags":["express","mock","vueCli","webpcak"],"categories":["Node"],"updated":"2018-09-21T03:51:26.000Z","content":"<p>我们想要给我们的mock data 找一个接口请求，原版配置在 dev-server.js ，新版的 vue-webpack-template 删除了dev-server.js，改用webpcak.dev.conf.js代替（具体更新见<a href=\"https://github.com/vuejs-templates/webpack/pull/975\" target=\"_blank\" rel=\"noopener\">github：switch to webpack-dev-server</a>）</p>\n<p><img src=\"http://www.chenqaq.com/assets/images/vuecli1.png\" alt=\"switch to webpack-dev-server\" class=\"article-img\"></p>\n<a id=\"more\"></a>\n<figure class=\"highlight\"><div><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// # webpack.dev.conf.js</span></span><br><span class=\"line\"><span class=\"comment\">// 在const portfinder = require('portfinder')添加我们需要的一些模块</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// node的开发框架express来简化操作</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = express()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// mock data</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> appDate = <span class=\"built_in\">require</span>(<span class=\"string\">'../mock/data.json'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> seller = appDate.seller;</span><br><span class=\"line\"><span class=\"keyword\">const</span> goods = appDate.goods;</span><br><span class=\"line\"><span class=\"keyword\">const</span> ratings = appDate.ratings;</span><br></pre></td></tr></table></div></figure>\n\n<p>1、get请求配置</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"code\"><pre><span class=\"line\"># webpack.dev.conf.js</span><br><span class=\"line\"><span class=\"comment\">// 在devServer选项中添加以下内容</span></span><br><span class=\"line\"></span><br><span class=\"line\">before(app)&#123;</span><br><span class=\"line\">  app.get(<span class=\"string\">'/api/seller'</span>,(req,res)=&gt;&#123;</span><br><span class=\"line\">    res.json(&#123;</span><br><span class=\"line\">      errno : <span class=\"number\">0</span>,</span><br><span class=\"line\">      data : seller</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  app.get(<span class=\"string\">'/api/goods/'</span>,(req,res)=&gt;&#123;</span><br><span class=\"line\">    res.json(&#123;</span><br><span class=\"line\">      errno : <span class=\"number\">0</span>,</span><br><span class=\"line\">      data : goods</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  app.get(<span class=\"string\">'/api/ratings'</span>,(req,res)=&gt;&#123;</span><br><span class=\"line\">    res.json(&#123;</span><br><span class=\"line\">      errno : <span class=\"number\">0</span>,</span><br><span class=\"line\">      data : ratings</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>关于<code>devServer.before()</code> webpack有很详细的解释，并且给出了一个例子，它提供了在服务器内部所有中间件之前执行的自定义中间件的能力，用它可以来自定义处理程序</p>\n<p><img src=\"http://www.chenqaq.com/assets/images/webpack1.png\" alt=\"devServer.before\" class=\"article-img\"></p>\n<p>修改完配置之后，我们需要重新运行命令<code>npm run dev</code>重新编译即可</p>\n<p>然后标题栏访问</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"code\"><pre><span class=\"line\">http:<span class=\"comment\">//localhost:8080/api/seller</span></span><br></pre></td></tr></table></div></figure>\n\n<p><img src=\"http://www.chenqaq.com/assets/images/vuecli-json1.png\" alt=\"api/seller\" class=\"article-img\"></p>\n<p>同样的，我们访问</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"code\"><pre><span class=\"line\">http:<span class=\"comment\">//localhost:8080/api/goods</span></span><br><span class=\"line\"><span class=\"comment\">// 和</span></span><br><span class=\"line\">http:<span class=\"comment\">//localhost:8080/api/ratings</span></span><br></pre></td></tr></table></div></figure>\n<p>同样得到了我们的mock data，哈哈，终于给我们的mock data找了一个接口</p>\n<p>2、post请求配置</p>\n<p>如果配置post请求，我们可以做一下配置</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// # webpack.dev.conf.js</span></span><br><span class=\"line\">app.post(<span class=\"string\">'/api/foods'</span>,(req,res)=&gt;&#123;</span><br><span class=\"line\">  res.json(&#123;</span><br><span class=\"line\">    errno : <span class=\"number\">0</span>,</span><br><span class=\"line\">    data : foods</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 在组件中</span></span><br><span class=\"line\"><span class=\"comment\">// # ..vue</span></span><br><span class=\"line\">created()&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.$http.post(<span class=\"string\">'http://localhost:8080/api/foods'</span>).then(res)=&gt;&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>这样我们的<code>data mock</code>就有接口可以访问喽。</p>\n","prev":{"title":"一月就要结束，我的2018年已经开始！","link":"2018/01/25/life-aboutLife-job"},"next":{"title":"学校寒冬的清晨和深夜","link":"2018/01/10/life-aboutSchool-finalExam"},"plink":"//litten.me/2018/01/19/vueCl-exExpressDataMock-I-do-t-have-devServer/","copyright":{"custom":"自由转载-非商用-禁止演绎-保持署名（CC BY-NC-ND 4.0）"}}