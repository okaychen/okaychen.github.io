{"title":"requestAnimationFrame优化web动画","date":"2018-05-15T10:01:39.000Z","date_formatted":{"ll":"May 15, 2018","L":"05/15/2018","MM-DD":"05-15"},"link":"2018/05/15/js-requestAnimationFrame-md","tags":["JS","web动画"],"categories":["JavaScript"],"updated":"2018-09-24T07:22:34.000Z","content":"<h2 id=\"requestAnimationFrame-是什么\">requestAnimationFrame 是什么?<a href=\"2018/05/15/js-requestAnimationFrame-md#requestAnimationFrame-是什么\"></a></h2><p>在浏览器动画程序中，我们一般会使用定时器来循环每隔多少毫秒来移动物体一次，来使它产生动画的效果。requestAnimationFrame()函数是针对动画效果的 API，告诉浏览器您希望执行动画并请求浏览器在下一次重绘之前调用指定的函数来更新动画，可以把它用在 DOM 上的风格变化或 canvas 动画或 WebGL 中。</p>\n<a id=\"more\"></a>\n\n<h2 id=\"requestAnimationFrame-相比定时器有哪些优势\">requestAnimationFrame 相比定时器有哪些优势?<a href=\"2018/05/15/js-requestAnimationFrame-md#requestAnimationFrame-相比定时器有哪些优势\"></a></h2><p>那么问题就来了：CSS3 动画那么强，定时器同样可以完成一般的动画，我们为什么还需要 requestAnimationFrame()呢？</p>\n<p>首先对于主流的 CSS3 动画来说，虽然一些主流浏览器都对它有比较好的支持，但是 ie8 以下（）是不支持的是其一，其二 CSS3 动画的运动轨迹比较少，有不小的局限性。</p>\n<p>这时候我们会考虑到 JS，定时器使我们经常用到的方法，但是用定时器制作动画会发生【跳帧】问题，试想一下拥堵的高速公路上，最多每 16.7s 通过一辆车，结果突然插入一批 setinterval 的军车，强行要在 10s 通过。显然，这是超负荷的，想要顺利通过，只能让第三辆车军车直接消失。然而这是不现实的，于是就会堵车！</p>\n<p>同样的，显示器 16.7ms<code>刷新间隔之前发生了其他的绘制的请求</code>（setTimeout），导致所有的第三帧丢失，继而导致动画断续显示，这就是过渡绘制带来的问题。这也是为何 setTimeout 的定时器值推荐最小使用<code>16.7ms</code>原因<code>（16.7 = 1000 / 60，即每秒60帧）</code></p>\n<p>requestAnimationFrame 则会跟着浏览器的绘制走，如果浏览器设备的绘制间隔是 16.7ms，它就会 16.7ms 绘制；如果是 10ms，则会按 10ms 来绘制。这样就不会存在过度绘制的问题，动画不会掉帧。</p>\n<h2 id=\"requestAnimationFrame-用法\">requestAnimationFrame 用法<a href=\"2018/05/15/js-requestAnimationFrame-md#requestAnimationFrame-用法\"></a></h2><p>虽然说 CSS3 动画既方便又高效，但是对于 PC 端 IE8，9 之流，想要兼容某些动画效果，比如淡入淡出，该如何实现？一般情况下，IE10+我们使用 CSS3 实现，对于 IE9-之流，我们使用 setTimeout 实现。两套完全不同的 style.改下动画时间还要修改两处。requestAnimationFrame 跟 setTimeout 非常类似，都是单回调，用法也类似。</p>\n<p>我们一般使用下面的兼容写法：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.requestAnimFrame = (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.requestAnimationFrame ||</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.webkitRequestAnimationFrame ||</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.mozRequestAnimationFrame ||</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.oRequestAnimationFrame ||</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.msRequestAnimationFrame ||</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"><span class=\"regexp\">/* function */</span> callback, <span class=\"regexp\">/* DOMElement */</span> element</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">window</span>.setTimeout(callback, <span class=\"number\">1000</span> / <span class=\"number\">60</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;)();</span><br><span class=\"line\"></span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">animloop</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  requestAnimFrame(animloop);</span><br><span class=\"line\">  render();</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></div></figure>\n\n<h2 id=\"兼容性\">兼容性<a href=\"2018/05/15/js-requestAnimationFrame-md#兼容性\"></a></h2><p><img src=\"http://www.chenqaq.com/assets/images/CheckRequestAnimationFrame.jpg\" alt=\"requestAnimationFrame兼容性\" class=\"article-img\"></p>\n<p>主流浏览器都实现了 requestAnimationFrame 的支持，即使是 IE9-之流，通过一些优雅降级的方案，也可以做到不出错。</p>\n<p>比如，Opera 浏览器的技术师 Erik Möller <a href=\"https://blogs.opera.com/news/\" target=\"_blank\" rel=\"noopener\">把这个函数进行的封装</a>，使得它更好的兼容各种浏览器。<br>在 Erik Möller 标准函数的基础上加了兼容各种浏览器引擎的前缀。</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> lastTime = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> vendors = [<span class=\"string\">'webkit'</span>,<span class=\"string\">'moz'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> x=<span class=\"number\">0</span>;x&lt;vendors.length &amp;&amp; !<span class=\"built_in\">window</span>.requestAnimationFrame; ++x)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">window</span>.requestAnimationFrame = <span class=\"built_in\">window</span>[vendors[x] + <span class=\"string\">'RequestAnimationFrame'</span>];</span><br><span class=\"line\">        <span class=\"built_in\">window</span>.cancelAnimationFrame  = <span class=\"built_in\">window</span>[vendors[x] + <span class=\"string\">'CancleAniamtionFrame'</span>] ||</span><br><span class=\"line\">                                       <span class=\"built_in\">window</span>[vendors[x] + <span class=\"string\">'CancleRequestAnimationFrame'</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"built_in\">window</span>.requestAnimationFrame)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">window</span>.requestAnimationFrame = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">callback,element</span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> currTime = <span class=\"keyword\">new</span>.Date().getTime();</span><br><span class=\"line\">            <span class=\"keyword\">var</span> timeToCall = <span class=\"built_in\">Math</span>.max(<span class=\"number\">0</span>,<span class=\"number\">16.7</span> - (currTime - lastTime));</span><br><span class=\"line\">            <span class=\"keyword\">var</span> id = <span class=\"built_in\">window</span>.setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">                callback(currTime + timeToCall);</span><br><span class=\"line\">            &#125;,timeToCall);</span><br><span class=\"line\">            lastTime = currTime + timeToCall;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> id;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"built_in\">window</span>.cancelAnimationFrame)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">window</span>.cancelAnimationFrame = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">id</span>)</span>&#123;</span><br><span class=\"line\">            clearTimeout(id);</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;());</span><br></pre></td></tr></table></div></figure>\n\n<h2 id=\"练习\">练习<a href=\"2018/05/15/js-requestAnimationFrame-md#练习\"></a></h2><p>在使用 canvas 绘画时这个函数更加合适，能得到更好的效果。</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.reqestAnimFrame = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">window</span>.requestAnimationFrame ||</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.webkitRequestAnimationFrame ||</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.mozRequestAnimationFrame ||</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.oRequestAnimationFrame ||</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.msRequestAnimationFrame ||</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">callback, element</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">window</span>.setTimeout(callback, <span class=\"number\">1000</span> / <span class=\"number\">60</span>);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> canvas, context, toggle;</span><br><span class=\"line\"></span><br><span class=\"line\">init();</span><br><span class=\"line\">animate();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">init</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  canvas = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"canvas\"</span>);</span><br><span class=\"line\">  canvas.height = <span class=\"number\">512</span>;</span><br><span class=\"line\">  canvas.width = <span class=\"number\">512</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  context = cavnas.getContext(<span class=\"string\">\"2d\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">document</span>.body.appendChild(canvas);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">animate</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  reqestAnimFrame(animate);</span><br><span class=\"line\">  draw();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">draw</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> time = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime() * <span class=\"number\">0.002</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> x = <span class=\"built_in\">Math</span>.sin(time) * <span class=\"number\">192</span> + <span class=\"number\">256</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> y = <span class=\"built_in\">Math</span>.cos(time * <span class=\"number\">0.9</span>) * <span class=\"number\">192</span> + <span class=\"number\">256</span>;</span><br><span class=\"line\">  toggle = !toggle;</span><br><span class=\"line\"></span><br><span class=\"line\">  context.fillStyle = toggle ? <span class=\"string\">\"rgb(200,100,20)\"</span> : <span class=\"string\">\"rgb(20,20,100)\"</span>;</span><br><span class=\"line\">  context.beginPath();</span><br><span class=\"line\">  context.arc(x, y, <span class=\"number\">5</span>, <span class=\"number\">0</span>, <span class=\"built_in\">Math</span>.PI * <span class=\"number\">2</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">  context.closePath();</span><br><span class=\"line\">  context.fill();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<h2 id=\"参考资料\">参考资料<a href=\"2018/05/15/js-requestAnimationFrame-md#参考资料\"></a></h2>","prev":{"title":"linux下误将ssh密钥写入/root","link":"2018/10/05/linux-ssh-addToGithub-md"},"next":{"title":"碎言心语-短笔记","link":"2018/04/09/life-aboutIT"},"plink":"//litten.me/2018/05/15/js-requestAnimationFrame-md/","copyright":{"custom":"123..."}}